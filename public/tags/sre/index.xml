<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sre on Marcus Vechiato</title><link>https://blog.vechiato.cc/tags/sre/</link><description>Recent content in Sre on Marcus Vechiato</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Mon, 14 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.vechiato.cc/tags/sre/index.xml" rel="self" type="application/rss+xml"/><item><title>Do SLAs, Error Budgets, and Availability Metrics Include Maintenance Windows?</title><link>https://blog.vechiato.cc/post/maintenance-windows/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/maintenance-windows/</guid><description>
&lt;h1 id="-do-slas-error-budgets-and-availability-metrics-include-maintenance-windows">🔧 Do SLAs, Error Budgets, and Availability Metrics Include Maintenance Windows?&lt;/h1>
&lt;p>When it comes to service reliability, maintenance windows can be a gray area. Whether you're tracking uptime, setting SLOs, or managing customer expectations through SLAs, the question often comes up:&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>“Should scheduled maintenance count against our SLA? What about our error budget or availability metrics?”&lt;/em>&lt;/p>&lt;/blockquote>
&lt;p>Let’s unpack how scheduled (and unscheduled) maintenance affects your SLAs, error budgets, and availability calculations — and what best practices look like.&lt;/p></description></item><item><title>Insights from Mastering OpenTelemetry and Observability</title><link>https://blog.vechiato.cc/post/book-mastering-opentelemetry-and-observability/</link><pubDate>Sat, 04 Jan 2025 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-mastering-opentelemetry-and-observability/</guid><description>
&lt;h1 id="mastering-opentelemetry-and-observability">&lt;strong>Mastering OpenTelemetry and Observability&lt;/strong>&lt;/h1>
&lt;p>In the fast-paced era of cloud-native systems and distributed architectures, maintaining visibility and reliability across complex infrastructures has become crucial. This led me to explore &lt;em>Mastering OpenTelemetry and Observability&lt;/em> by Steve Flanders. The book is a deep dive into the tools, techniques, and methodologies for achieving robust observability using OpenTelemetry, a leading open-source framework.&lt;/p>
&lt;p>Written by a key contributor to OpenTelemetry, this book offers both technical expertise and actionable strategies for leveraging observability to improve system performance and reduce outages. It’s a must-read for anyone looking to enhance their understanding of telemetry data and system diagnostics.&lt;/p></description></item><item><title>Insights from Implementing Service Level Objectives</title><link>https://blog.vechiato.cc/post/book-implementing-service-level-objectives/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-implementing-service-level-objectives/</guid><description>
&lt;h1 id="implementing-service-level-objectives-a-practical-guide-to-slis-slos--error-budgets">&lt;strong>Implementing Service Level Objectives: A Practical Guide to SLIs, SLOs &amp;amp; Error Budgets&lt;/strong>&lt;/h1>
&lt;p>Reliability is a cornerstone of successful services, but how do we define and measure it effectively? Implementing Service Level Objectives by Alex Hidalgo provides a practical guide to adopting SLO-based approaches, allowing teams to balance user expectations and operational constraints. With its insights into SLIs (Service Level Indicators), SLOs (Service Level Objectives), and error budgets, the book helps bridge the gap between abstract goals and actionable strategies.&lt;/p></description></item><item><title>Insights from Chaos Engineering: System Resiliency in Practice</title><link>https://blog.vechiato.cc/post/book-chaos-engineering/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-chaos-engineering/</guid><description>
&lt;h1 id="chaos-engineering-system-resiliency-in-practice">&lt;strong>Chaos Engineering: System Resiliency in Practice&lt;/strong>&lt;/h1>
&lt;p>I remember multiple occasions when systems were not down but badly impacted during major events. The scramble to restore service and the subsequent post-mortem meeting highlighted our lack of preparedness for unexpected system failures. The book begins with the history of Chaos Engineering, originating from Netflix. Rosenthal and Jones describe the transition from datacenter architecture to cloud infrastructure, highlighting challenges and the necessity of Chaos Engineering for improving system resiliency. This book delves into the principles and practices of Chaos Engineering, a methodology designed to improve system reliability by intentionally introducing failures. I chose this book to understand how we can better prepare for the unexpected and ensure our systems can withstand and recover from disruptions.&lt;/p></description></item><item><title>Insights from Learning eBPF</title><link>https://blog.vechiato.cc/post/book-learning-ebpf/</link><pubDate>Sun, 12 May 2024 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-learning-ebpf/</guid><description>
&lt;h1 id="learning-ebpf-programmatically-extend-the-linux-kernel">&lt;strong>Learning eBPF: Programmatically Extend the Linux Kernel&lt;/strong>&lt;/h1>
&lt;p>In the realm of cloud-native infrastructure, eBPF (extended Berkeley Packet Filter) has emerged as a revolutionary technology. By allowing developers to write custom code that dynamically changes kernel behavior, eBPF has paved the way for a new generation of security, observability, and networking tools. In &amp;quot;Learning eBPF: Programming the Linux Kernel for Enhanced Observability, Networking, and Security,&amp;quot; Liz Rice provides a comprehensive guide to understanding and utilizing eBPF. This book is essential for developers, system administrators, operators, and students who seek to harness the power of eBPF.&lt;/p></description></item><item><title>Insights from Learning Open Telemetry</title><link>https://blog.vechiato.cc/post/book-learning-open-telemetry/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-learning-open-telemetry/</guid><description>
&lt;h1 id="learning-opentelemetry-setting-up-and-operating-a-modern-observability-system">&lt;strong>Learning OpenTelemetry: Setting Up and Operating a Modern Observability System&lt;/strong>&lt;/h1>
&lt;p>As someone who has spent countless hours troubleshooting distributed systems, I understand the struggle of trying to untangle metrics, logs, and traces spread across multiple tools. That’s why &lt;em>Learning OpenTelemetry&lt;/em> by Austin Parker and Ted Young resonated with me. This book introduces OpenTelemetry, a game-changing framework for observability that unifies these disparate signals into a cohesive system. Whether you're new to observability or a seasoned developer looking to adopt modern practices, this book provides the tools and insights to make your systems more transparent and easier to debug.&lt;/p></description></item><item><title>Reflecting on My Presentation at the London SRE Meetup</title><link>https://blog.vechiato.cc/post/london-sre-meetup/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/london-sre-meetup/</guid><description>
&lt;p>I recently had the wonderful opportunity to present at the London SRE Meetup, and I'm excited to share the experience with you all. The presentation, titled &amp;quot;Working Together: SRE and Platform Engineering,&amp;quot; focused on the synergy between site reliability engineering and platform engineering to enhance operational efficiencies and reliability.&lt;/p>
&lt;p>I am pleased to have engaged with so many knowledgeable professionals and enthusiasts who are passionate about improving systems and operations. The discussions and interactions were enlightening, and I hope they were as beneficial for attendees as they were for me.&lt;/p></description></item><item><title>Insights from Establishing SRE Foundations</title><link>https://blog.vechiato.cc/post/book-establishing-sre-foundations/</link><pubDate>Fri, 20 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-establishing-sre-foundations/</guid><description>
&lt;h1 id="establishing-sre-foundations">&lt;strong>Establishing SRE Foundations&lt;/strong>&lt;/h1>
&lt;p>&amp;quot;Establishing SRE Foundations: A Step-by-Step Guide&amp;quot; by Vladyslav Ukis provides a comprehensive framework for implementing Site Reliability Engineering (SRE) in software delivery organisations. Drawing from his extensive experience, Ukis outlines practical steps and methodologies to enhance reliability and operational efficiency in software systems.&lt;/p>
&lt;p>![[sre_foundations.jpg]]&lt;/p>
&lt;p>&lt;a href="https://www.amazon.co.uk/dp/0137424604">Establishing SRE Foundations: A Step-by-Step Guide to Introducing Site Reliability Engineering in Software Delivery Organizations&lt;/a>&lt;/p>
&lt;h2 id="summary">&lt;strong>Summary&lt;/strong>&lt;/h2>
&lt;p>![[mindmap_establishing_sre.png]]&lt;/p>
&lt;h3 id="chapter-1-introduction-to-sre">&lt;strong>Chapter 1: Introduction to SRE&lt;/strong>&lt;/h3>
&lt;p>The first chapter introduces the concept of Site Reliability Engineering (SRE) and its importance in modern software development. Ukis discusses the evolution of SRE, comparing it with other IT management frameworks such as ITIL, COBIT, and DevOps. The chapter sets the stage by explaining why SRE is crucial for aligning development and operations towards a common goal of reliability.&lt;/p></description></item><item><title>Insights from Observability Engineering: Achieving Production Excellence</title><link>https://blog.vechiato.cc/post/book-observability-engineering-2022/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-observability-engineering-2022/</guid><description>
&lt;h1 id="observability-engineering">&lt;strong>Observability Engineering&lt;/strong>&lt;/h1>
&lt;p>In the rapidly evolving landscape of software development and IT operations, ensuring system reliability and performance is paramount. &amp;quot;Observability Engineering&amp;quot; by Charity Majors, Liz Fong-Jones, and George Miranda provides a comprehensive guide to achieving production excellence through observability. This book explores the principles, practices, and tools necessary to understand and improve system behavior, making it an essential read for software engineers and site reliability engineers (SREs).&lt;/p>
&lt;p>![[observability_engineering.png]]
2022 by Charity Majors &amp;amp; Liz Fong-Jones &amp;amp; George Miranda&lt;/p></description></item><item><title>Insights from Database Reliability Engineering: Designing and Operating Resilient Database Systems</title><link>https://blog.vechiato.cc/post/book-database-reliability-engineering/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-database-reliability-engineering/</guid><description>
&lt;h1 id="database-reliability-engineering-designing-and-operating-resilient-database-systems">&lt;strong>Database Reliability Engineering: Designing and Operating Resilient Database Systems&lt;/strong>&lt;/h1>
&lt;p>&lt;em>Database Reliability Engineering&lt;/em> by Laine Campbell and Charity Majors is a comprehensive guide on how to design, build, and manage resilient database systems. The book emphasises the importance of reliability in database operations and introduces the role of a Database Reliability Engineer (DBRE) who combines database expertise with software engineering principles to ensure robust data management.&lt;/p>
&lt;p>![[book_database_reliability.jpg]]
2017 by Laine Campbell &amp;amp; Charity Majors&lt;/p></description></item><item><title>Insights from Seeking SRE</title><link>https://blog.vechiato.cc/post/book-seeking-sre/</link><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.vechiato.cc/post/book-seeking-sre/</guid><description>
&lt;h1 id="seeking-sre">&lt;strong>Seeking SRE&lt;/strong>&lt;/h1>
&lt;p>Site Reliability Engineering (SRE) has become a fundamental practice in ensuring the reliability and efficiency of large-scale production systems. &amp;quot;Seeking SRE: Conversations About Running Production Systems at Scale&amp;quot; by David N. Blank-Edelman offers a comprehensive exploration of SRE practices through a series of insightful essays and interviews. This book serves as an invaluable resource for anyone involved in managing complex systems, from seasoned SREs to those new to the field.&lt;/p></description></item></channel></rss>